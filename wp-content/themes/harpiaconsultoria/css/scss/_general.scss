@keyframes opacity {
    from {
        opacity: 0;
        visibility: hidden;
    }

    to {
        opacity: 1;
        visibility: visible;
    } 
}

html, body {
    @include toRem(font-size, 18);
    min-width: 375px;
    animation: opacity 600ms forwards;
    background-color: black;
    color: color(gray, base);
    font-weight: 500;
    overflow-x: hidden;
    line-height: 1.8;
}

header, main {
    background-color: white;
}

main {
    position: relative;
    z-index: 1;
}

.logo {
    img {
        height: auto;
        width: auto;
    }
}

.navigation .container {
    padding: 0;
}

.img-fluid {
    max-width: 100%;
}

.container {
    @media screen and (max-width: $screen-lg-min) {
        max-width: 90%;
    }
}

.btn {
    padding: 12px 22px;
    text-transform: uppercase;
    @include toRem(font-size, 12);
    @include toRem(letter-spacing, 1.5);
    border-radius: 5px;
    border: 1px transparent solid;
    text-align: center;
    transition: 500ms ease opacity;
    opacity: 1;
    &[class*="whatsapp"] {
        text-transform: uppercase;
        @include toRem(letter-spacing, 1.5);
        font-weight: 300;
        color: white;
        background-color: color(green, base);
        &:hover {
            background-color: color(secondary, base);
            border-color: color(green, base);
            color: color(green, base);
        }
        [class*="fa-"] {
            margin-left: 23px;
            @include toRem(font-size, 23);
        }
    }
    &.primary {
        background-color: color(primary, base);
        color: white;
        &:hover {
            border-color: color(primary, base);
            background-color: transparent;
            color: color(primary, base);
        }
    }
}

.section {
    .container {
        padding-top: 80px;
        padding-bottom: 80px;
        .section-header {
            .container {
                padding: 0;
                max-width: 100%
            }
        }
    }
    // &.page-header {
    //     .container {
    //         padding-bottom: 0;
    //         .section-header {
    //             padding-bottom: inherit;
    //             .container {
    //                 padding: 0;
    //                 max-width: 100%;
    //             }
    //         }
    //     }
    // }
    &-header {
        padding-bottom: 80px;
        position: relative;
        z-index: 2;
        color: color(gray, medium);
        h2,
        .title {
            @include toRem(font-size, 32);
            color: black;
            font-weight: 700;
            span {
                font-weight: inherit
            }
        }
        .subtitle {
            @include toRem(font-size, 12);
            color: color(orange, base);
        }
        p,
        .text {
            @include toRem(font-size, 18);
            color: inherit;
            ul, ol,
            p {
                color: inherit;
                line-height: inherit;                
                &:not(:first-child) {
                    margin-top: 1rem;
                }
            } 
            ul, ol {
                list-style: disc;
                padding-left: 18px;
            }              
        }
    }
}

.read-more {
    @include toRem(font-size, 12);
    text-transform: uppercase;
    color: color(gray, dark);
    [class*="fa"] {
        color: color(orange, base);
        padding-left: 15px
    }
    &:hover {
        text-decoration: underline
    }
}

.yu2fvl {
    position: relative;
    display: block;
    @media screen and (min-width: $screen-md-min) {
        height: 100%;
    }
    img {
        position: relative;
        width: auto;
        height: auto;
        &:not(.play) {
            height: 270px;
            @media screen and (min-width: $screen-md-min) {
                height: 100%;
            }
            width: 100%;
            object-fit: cover;
        }
    }
    .play {
        position: absolute;
        z-index: 3;
        top: calc(50% - 69px/2);
        left: calc(50% - 69px/2);
    }
}

$default-width-grid: 319px;
$sm-width-grid: 200px;

.grid {
    @media screen and (max-width: $screen-lg-min) {
        overflow: auto;
    }
    &-item {
        cursor: pointer;
        width: $sm-width-grid;
        @media screen and (min-width: $screen-md-min) {
            width: $default-width-grid;
            @media screen and (min-width: $screen-lg-min) {
                width: auto;
            }
        }
        @media screen and (max-width: $screen-lg-min) {
            &.flex-fill {
                flex: 0 0 auto !important;
            }
        }
        &:last-of-type {
            @media screen and (min-width: $screen-lg-min) {
                display: flex;
                flex-flow: column;
                justify-content: space-between;
            }
        }
        &:first-of-type {
            flex: 0 0 auto;
            width: $sm-width-grid;
            @media screen and (min-width: $screen-md-min) {
                width: $default-width-grid;
                @media screen and (min-width: $screen-lg-min) {
                    width: 479px;
                    height: 355px; 
                }
            }            
            .grid-item-inner {
                @media screen and (min-width: $screen-lg-min) {
                    padding: 30px;
                    justify-content: flex-end;
                }
                height: 100%;
                display: flex;
                flex-flow: column;
                position: relative;
                overflow: hidden;   
                background-size: cover;
                @media screen and (max-width: $screen-lg-min) {
                    background-image: none !important;
                }
                * {
                    position: relative;
                    z-index: 2;
                }
                &::after {
                    @media screen and (min-width: $screen-lg-min) {
                        content: '';
                    }
                    position: absolute;
                    z-index: 1;
                    bottom: 0;
                    left: 0;
                    width: 100%;
                    height: 100%;
                    background: rgb(0,0,0);
                    background: linear-gradient(0deg, rgba(0,0,0,1) 0%, rgba(255,255,255,0) 100%);
                }  
                .title {
                    @media screen and (min-width: $screen-lg-min) {
                        @include toRem(font-size, 22);
                        color: white;
                    }
                }
            }
        }
        .grid-item-inner {
            .thumbnail {
                img {
                    object-fit: cover;
                    width: 100%;
                    height: auto;
                    @media screen and (min-width: $screen-xl-min) {
                        height: 175px;
                        @media screen and (min-width: $screen-xxl-min) {
                            height: 220px;
                        }                            
                    }                        
                }
            }
            .title {
                @include toRem(font-size, 18);
            }
            .text {
                @include toRem(font-size, 12);
                color: color(gray, light);
                text-transform: uppercase;
            }
        }      
        &:hover {
            .grid-item-inner {
                .title {
                    color: color(orange, base);
                }
            }      
        }  
    }
}

.paginate {
    > * {
        margin: 0 5px;
        height: 36px;
        width: 36px;
        display: flex;
        flex-flow: column wrap;
        justify-content: center;
        align-items: center;
        color: color(gray, medium);
        border: 1px color(gray, medium) solid;
        border-radius: 5px;
        @include toRem(font-size, 12);
        line-height: 2;
        &.current,
        &:hover {
            color: white;
            border: 1px color(orange, base) solid; 
            background-color: color(orange, base);
        }
    }
}

.error404,
.page-template-about,
.single {
    .accordion {
        .section-header {
            padding-bottom: 0;
        }
        > .container {
            position: relative;
            @media screen and (min-width: $screen-xl-min) {
                &::after {
                    content: '';
                    background-color: color(gray, lightest);
                    height: 100%;
                    width: 100vw;
                    position: absolute;
                    top: 0;
                    left: 190px;
                    z-index: 1;
                }
                * {
                    z-index: 2;
                }
            }            
        }
        .media {
            position: relative;
            img {
                object-fit: cover;
                position: relative;
                @media screen and (min-width: $screen-xl-min) {
                    margin-left: -210px;
                    @media screen and (min-width: $screen-xxl-min) {
                        margin-left: -120px;
                    }                    
                }                      
            }         
        }
    }     
}

.content-area {
    &-inner {
        p {
            &:not(:first-child):not(:first-of-type) ~ p {
                margin-top: 1rem;
            }
        }
        @for $i from 1 through 3 {
            h#{$i} {
                &:not(:first-child) {
                    margin-top: 1rem;
                }
                &:first-child {
                    margin-bottom: 1rem;
                }
            }
        }        
    }
}

p {
    strong, b {
        font-weight: bold !important;
    }
    word-break: break-word;
    word-wrap: break-word;
    overflow-wrap: break-word;
    // -webkit-hyphens: auto;
    // -moz-hyphens: auto;
    // -ms-hyphens: auto;
    // hyphens: auto;    
    * {
        word-break: inherit;
        word-wrap: inherit;
        overflow-wrap: inherit;
        // -webkit-hyphens: inherit;
        // -moz-hyphens: inherit;
        // -ms-hyphens: inherit;
        // hyphens: inherit;            
    }    
}

ul, ol {
    li {
        &::marker {
            color: color(orange, base);
        }
    }
}  